<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.market.root.mybatis.product.ProductMapper">
<resultMap type="com.market.root.product.dto.ProductDTO" id="product">
	<result property="mbrId" column="mbr_id"/>
	<result property="prodId" column="prod_id"/>
	<result property="prodTitle" column="prod_title"/>
	<result property="price" column="price"/>
	<result property="hit" column="hit"/>
	<result property="trdLocation" column="trd_location"/>
	<result property="prodContent" column="prod_content"/>
	<result property="prodDate" column="prod_date"/>
	<result property="prodStat" column="prod_stat"/>
	<result property="cateCode" column="cate_code"/>
</resultMap>
<!-- prod_info 페이징 기능/목록 보기 -->
<!-- 판매중인 게시글 불러오기 -->
<select id="psAllView" resultMap="product">
	select B.* from(select rownum rn, A.* from
	(select * from prod_info where prod_stat = 0 
	<if test="mbrId != 'admin'">
		and (mbr_id = #{mbrId})
	</if>
	order by prod_id desc)A)B 
	where (rn between #{s} and #{e})
</select>
<!-- 판매완료된 게시글 불러오기 -->
<select id="sellsAllView" resultMap="product">
	select B.* from(select rownum rn, A.* from
	(select * from prod_info where prod_stat = 1
	<if test="mbrId != 'admin'">
		and (mbr_id = #{mbrId})
	</if>	
	order by prod_id desc)A)B 
	where (rn between #{s} and #{e})
</select>

<!-- prod_info 개인 판매중인 행 호출 -->
<select id="personalSell" resultType="Integer">
	select count(*) from prod_info where prod_stat=#{prodStat} 
	<if test="mbrId != 'admin'">
		and (mbr_id = #{mbrId})
	</if>
</select>
<!-- prod_info 개인 판매완료된 행 호출 -->
<select id="personalCompleSell" resultType="Integer">
	select count(*) from prod_info where prod_stat=#{prodStat}
	<if test="mbrId != 'admin'">
		and (mbr_id = #{mbrId})
	</if>
</select>
<!-- prod_info 전체 행 호출 -->
<select id="selectBoardCount" resultType="Integer">
	select count(*) from prod_info where prod_stat = 0 
</select>
<select id="selectCompleBoardCount" resultType="Integer">
	select count(*) from prod_info where prod_stat = 1
</select>

<!-- 상품 제목 검색 -->
<select id="prodSearch" resultMap="product">
     select * from prod_info where prod_title like '%'||#{keyword}||'%'
</select>

<!-- 물품 등록 -->
<insert id="prodRegister">
	insert into prod_info (mbr_id, prod_id, prod_title,cate_code,price,trd_location,prod_content,prod_date)
	values(#{mbrId}, prod_id_seq.nextval,#{prodTitle},#{cateCode},#{price},#{trdLocation},#{prodContent},#{prodDate}) 
</insert>

<!-- 한개의 상품 정보 불러오기 + 시간설정-->
<select id="oneProduct" resultMap="product">
	select * from prod_info where prod_id=#{prodId}
</select>

<!-- 한개의 상품 정보만을 불러옴 / 시간처리 x-->
<select id="prodStatus" resultMap="product">
	select * from prod_info where prod_id=#{prodId}
</select>

<!-- 조회수 증가 -->
<update id="upHit">
	update prod_info set hit=hit+1 where prod_id=#{prodId}
</update>

<!-- 상품 삭제 -->
<delete id="prodDelete">
	delete prod_info where prod_id=#{prodId}
</delete>

<!-- 사진 등록 -->
<insert id="prodImgRegister">
	insert into image (prod_id,org_img,upload_path,uuid) values(prod_id_seq.currval,#{orgImg},#{uploadPath},#{UUID})
</insert>

<!-- 판매완료 업데이트 -->
<update id="sellsComple">
	update prod_info set prod_stat=#{prodStat} where mbr_id=#{mbrId} and prod_id=#{prodId}
</update>

</mapper>